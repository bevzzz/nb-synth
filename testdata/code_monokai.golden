<pre style="color:#f8f8f2;background-color:#272822;"><code><span style="display:flex;"><span><span style="color:#f92672">import</span> math
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">greet</span>(name):
</span></span><span style="display:flex;"><span>	print(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Hello, </span><span style="color:#e6db74">{</span>name<span style="color:#e6db74">}</span><span style="color:#e6db74">!&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>numbers <span style="color:#f92672">=</span> [<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">5</span>]
</span></span><span style="display:flex;"><span>squared_numbers <span style="color:#f92672">=</span> [math<span style="color:#f92672">.</span>pow(num, <span style="color:#ae81ff">2</span>) <span style="color:#66d9ef">for</span> num <span style="color:#f92672">in</span> numbers]
</span></span><span style="display:flex;"><span>print(squared_numbers)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">Animal</span>:
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">def</span> __init__(self, species, sound):
</span></span><span style="display:flex;"><span>		self<span style="color:#f92672">.</span>species <span style="color:#f92672">=</span> species
</span></span><span style="display:flex;"><span>		self<span style="color:#f92672">.</span>sound <span style="color:#f92672">=</span> sound
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>cat <span style="color:#f92672">=</span> Animal(<span style="color:#e6db74">&#34;Cat&#34;</span>, <span style="color:#e6db74">&#34;Meow&#34;</span>)
</span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;A </span><span style="color:#e6db74">{</span>cat<span style="color:#f92672">.</span>species<span style="color:#e6db74">}</span><span style="color:#e6db74"> says </span><span style="color:#e6db74">{</span>cat<span style="color:#f92672">.</span>sound<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Simple Fibonacci sequence generator</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">fibonacci</span>(n):
</span></span><span style="display:flex;"><span>	fib_sequence <span style="color:#f92672">=</span> [<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>]
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">while</span> len(fib_sequence) <span style="color:#f92672">&lt;</span> n:
</span></span><span style="display:flex;"><span>		fib_sequence<span style="color:#f92672">.</span>append(fib_sequence[<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>] <span style="color:#f92672">+</span> fib_sequence[<span style="color:#f92672">-</span><span style="color:#ae81ff">2</span>])
</span></span><span style="display:flex;"><span>	print(fib_sequence)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fibonacci(<span style="color:#ae81ff">10</span>)
</span></span></code></pre>